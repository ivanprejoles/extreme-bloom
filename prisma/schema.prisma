// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum MemberRole {
  ADMIN
  GUEST
  DEACTIVATED
}

model User {
  id   String     @id @default(auto()) @map("_id") @db.ObjectId
  role MemberRole @default(GUEST)

  email    String  @unique
  emailId  String  @unique
  facebook String?
  number   String?
  imageUrl String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  carts Cart[]
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  items Item[]
}

model Item {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  title       String @unique
  categoryId  String @db.ObjectId
  imageSrc    String
  quantity    Int    @default(0)
  price       Float  @default(0)
  maxOrder    Int    @default(3)
  description String

  item Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Status {
  Done
  Waiting
  Declined
}

model Cart {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  status Status @default(Waiting)
  items  Json[]
  amount Float  @default(0)
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  imageSrc    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
